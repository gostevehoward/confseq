# This workflow will install boost dependencies, lint, run unit tests, and build wheels with a variety of OS/Python configurations.
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Check package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        # Install boost library to OS
        if [ "$RUNNER_OS" == "Linux" ]; then
          sudo apt-get update 
          sudo apt-get install -y libboost-all-dev
        elif [ "$RUNNER_OS" == "macOS" ]; then
          brew install boost
        fi
        python -m pip install --upgrade pip
        
    - name: Install confseq package
      run: |
        python -m pip install ./
        
    - name: Lint with flake8
      run: |
        python -m pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude test/googletest-*
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --exclude test/googletest-*
        
    - name: Run unit tests
      run: |
        python -m pip install pytest
        # Run c++ unit tests
        make -C test runtests
        # Run python unit tests, but ignore googletest library
        pytest -m "not random" --ignore=test/googletest-1.8.1/
        
    - name: Build and upload macOS wheels
      run: | 
        if [ "$RUNNER_OS" == "macOS" ]; then
          python -m pip install build
          python -m build
        fi
    - uses: actions/upload-artifact@v2
      with:
        name: confseq_macos_dist
        path: ./dist/confseq-*
